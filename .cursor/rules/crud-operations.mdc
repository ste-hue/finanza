---
globs: orti-finance-compass/src/components/ZenFinancialDashboard.tsx, orti-finance-compass/src/hooks/useFinCalSupabase.ts, orti-finance-compass/src/lib/hierarchyMiddleware.ts
alwaysApply: true
---

# Operazioni CRUD - Architettura Fissa

## Distinzione UUID vs Slug:
- **Sempre UUID**: Usa `subcategory_id` (UUID) per API/DB calls.
- **Mai Slug**: Slug (es. "entrate-hotel") solo per display; risolvi in UUID da state `hierarchicalCategories`.
- **Frontend**: In `handleSaveEntry`, risolvi UUID prima di call.

## Flusso CRUD Semplificato:
1. **Frontend**: `handleSaveEntry` in `ZenFinancialDashboard.tsx`.
2. **Risoluzione UUID**: Da state gerarchico.
3. **Call Direct**: Usa Supabase patterns (es. `supabase.from('entries').upsert()`) o PUT `/entry`.
4. **Refresh**: `await loadData()` post-successo; subscriptions per sync auto.

## Parametri Entry Update:
```typescript
{
  subcategory_id: string,  // UUID!
  year: number,
  month: number,
  value: number,
  is_projection: boolean,
  notes?: string
}